// dilshanrakshitha-spark-ml-samples/spark-driver/build.gradle

plugins {
    id 'java-library' // Good for libraries that expose an API
    // 'java' and 'io.spring.dependency-management' are applied via subprojects block in root
}

// Repositories are inherited from allprojects in root, but can be added here if specific
 repositories {
   mavenCentral() // Usually not needed if in root's allprojects
 }

ext {
    sparkVersion = '3.5.1'
    snowballVersion = '1.0'
}

dependencies {
    implementation project(':spark-distributed-library')

    implementation "org.apache.spark:spark-core_${rootProject.ext.scalaBaseVersion}:${rootProject.ext.sparkVersion}"
    implementation "org.apache.spark:spark-sql_${rootProject.ext.scalaBaseVersion}:${rootProject.ext.sparkVersion}"
    implementation "org.apache.spark:spark-mllib_${rootProject.ext.scalaBaseVersion}:${rootProject.ext.sparkVersion}"
    implementation "org.apache.spark:spark-ml_${rootProject.ext.scalaBaseVersion}:${rootProject.ext.sparkVersion}" // Problematic one

    implementation 'org.springframework:spring-context' // Version managed by BOM from root
    implementation 'org.springframework:spring-beans'   // Version managed by BOM from root

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.springframework:spring-test' // Version managed by BOM from root
}